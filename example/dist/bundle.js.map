{
  "version": 3,
  "sources": ["../../src/index.ts", "../src/index.ts"],
  "sourcesContent": ["// @ts-check\n\"use strict\"\n\ntype TLike = new (...args: any[]) => void\n\ntype TContent = string | Node | TonicTemplate\n\ninterface TAttr<K extends string = any, V = any> {\n  name: K\n  value: V\n}\n\ninterface TState {}\n\ntype TProps = Record<string, any>\n\ntype TRender<P extends TProps, K extends TNode> = (\n  html?: (strings: TemplateStringsArray, values: any[]) => TNode,\n  props?: P\n) => K\n\ntype TNode =\n  | string\n  | TonicTemplate\n  | Promise<TonicTemplate>\n  | AsyncGenerator<TonicTemplate>\n\nclass TonicTemplate {\n  isTonicTemplate = true\n  __children__?: any[]\n\n  constructor(\n    public rawText: string,\n    public templateStrings: TemplateStringsArray | null,\n    public unsafe: boolean\n  ) {}\n\n  public valueOf() {\n    return this.rawText\n  }\n  public toString() {\n    return this.rawText\n  }\n}\n\nabstract class Tonic<\n  P extends TProps = {},\n  S extends TState = {}\n> extends window.HTMLElement {\n  static isTonicTemplate = true\n  static _tags = \"\"\n  static _refIds: string[] = []\n  static _data: Record<string, any> = {}\n  static _states: Record<string, any> = {}\n  static _children: Record<string, any> = {}\n  static _reg: Record<string, CustomElementConstructor> = {}\n  static _stylesheetRegistry: (() => string)[] = []\n  static _index = 0\n  static SPREAD = /\\.\\.\\.\\s?(__\\w+__\\w+__)/g\n  static ESC = /[\"&'<>`/]/g\n  static AsyncFunctionGenerator = async function* () {}.constructor.name\n  static AsyncFunction = async function () {}.constructor.name\n  static MAP = {\n    '\"': \"&quot;\",\n    \"&\": \"&amp;\",\n    \"'\": \"&#x27;\",\n    \"<\": \"&lt;\",\n    \">\": \"&gt;\",\n    \"`\": \"&#x60;\",\n    \"/\": \"&#x2F;\",\n  }\n  static ssr = false\n  static nonce = Math.random().toString()\n\n  _id = \"\"\n  _source?: string\n  _state: S = {} as S\n  _props: P = {} as P\n  __props: TAttr[] = []\n  preventRenderOnReconnect = false\n  elements: Element[] = []\n  nodes: ChildNode[] = []\n  pendingReRender?: Promise<void> | null = null\n  root?: ShadowRoot | any\n\n  constructor() {\n    super()\n    const state = Tonic._states[super.id]\n    delete Tonic._states[super.id]\n    this._state = state || {}\n    this.preventRenderOnReconnect = false\n    this.elements = [...Array.from(this.children)]\n    ;(this.elements as any).__children__ = true\n    this.nodes = [...Array.from(this.childNodes)]\n    ;(this.nodes as any).__children__ = true\n    this._events()\n  }\n\n  static _createId() {\n    return `tonic${Tonic._index++}`\n  }\n\n  static _splitName(s: string) {\n    return s.match(/[A-Z][a-z0-9]*/g)!.join(\"-\")\n  }\n\n  static _normalizeAttrs<T extends { name: string; value: unknown }>(\n    o: T[],\n    x: Record<string, unknown> = {}\n  ) {\n    ;[...o].forEach((o) => (x[o.name] = o.value))\n    return x\n  }\n\n  private _checkId() {\n    const _id = super.id\n    if (!_id) {\n      const html = this.outerHTML.replace(this.innerHTML, \"...\")\n      throw new Error(`Component: ${html} has no id`)\n    }\n    return _id\n  }\n\n  private _events() {\n    const hp = Object.getOwnPropertyNames(window.HTMLElement.prototype)\n    for (const p of this.__props) {\n      if (hp.indexOf(\"on\" + p) === -1) continue\n      this.addEventListener(p as any, this)\n    }\n  }\n\n  private _prop(o: any) {\n    const id = this._id\n    const p = `__${id}__${Tonic._createId()}__`\n    Tonic._data[id] = Tonic._data[id] || {}\n    Tonic._data[id][p] = o\n    return p\n  }\n\n  private _placehold(r: any) {\n    const id = this._id\n    const ref = `placehold:${id}:${Tonic._createId()}__`\n    Tonic._children[id] = Tonic._children[id] || {}\n    Tonic._children[id][ref] = r\n    return ref\n  }\n\n  static match(el: Element | any, s: string) {\n    if (!el.matches) el = el.parentElement\n    return el.matches(s) ? el : el.closest(s)\n  }\n\n  static getPropertyNames(proto: any) {\n    const props = []\n    while (proto && proto !== Tonic.prototype) {\n      props.push(...Object.getOwnPropertyNames(proto))\n      proto = Object.getPrototypeOf(proto)\n    }\n    return props\n  }\n\n  static add(c: TLike): TLike\n  static add(c: Function, htmlName: string): Function\n  static add(c: TLike | Function, htmlName?: string) {\n    const name = c instanceof Tonic ? c.constructor.name : c.name\n\n    if (!htmlName) {\n      htmlName = Tonic._splitName(name).toLowerCase()\n    }\n\n    const hasValidName = htmlName && htmlName.length > 1\n\n    if (!hasValidName) {\n      throw Error(\"Mangling. https://bit.ly/2TkJ6zP\")\n    }\n\n    if (!Tonic.ssr && window.customElements.get(htmlName)) {\n      console.warn(`Replacing Tonic.add(${name}, '${htmlName}')`)\n    }\n\n    if (!(\"isTonicTemplate\" in c)) {\n      const tmp = {\n        [c.name]: class extends Tonic {},\n      }[c.name]\n      ;(tmp as any).prototype.render = c\n      c = tmp\n    }\n\n    ;(c as any).prototype.__props = Tonic.getPropertyNames((c as any).prototype)\n\n    Tonic._reg[htmlName] = c as CustomElementConstructor\n    Tonic._tags = Object.keys(Tonic._reg).join()\n    window.customElements.define(htmlName, c as CustomElementConstructor)\n\n    if (c instanceof Tonic && typeof c.stylesheet === \"function\") {\n      Tonic.registerStyles(c.stylesheet)\n    }\n\n    return c\n  }\n\n  static registerStyles(stylesheetFn: () => string) {\n    if (Tonic._stylesheetRegistry.includes(stylesheetFn)) return\n    Tonic._stylesheetRegistry.push(stylesheetFn)\n\n    const styleNode = document.createElement(\"style\")\n    if (Tonic.nonce) styleNode.setAttribute(\"nonce\", Tonic.nonce)\n    styleNode.appendChild(document.createTextNode(stylesheetFn()))\n    if (document.head) document.head.appendChild(styleNode)\n  }\n\n  static escape(s: string) {\n    return s.replace(Tonic.ESC, (c) => Tonic.MAP[c as keyof typeof Tonic.MAP])\n  }\n\n  static unsafeRawString(s: string, templateStrings: TemplateStringsArray) {\n    return new TonicTemplate(s, templateStrings, true)\n  }\n\n  private async _drainIterator(\n    target: Tonic<P, S> | ShadowRoot,\n    iterator: AsyncGenerator\n  ): Promise<void> {\n    const result = await iterator.next()\n    this._set(target, undefined, result.value)\n    if (result.done) return\n    return this._drainIterator(target, iterator)\n  }\n\n  private _set = (\n    target: Tonic<P, S> | ShadowRoot,\n    render: undefined | typeof this[\"render\"],\n    content: string = \"\"\n  ) => {\n    for (const node of Array.from(target.querySelectorAll(Tonic._tags))) {\n      if (!(node as any).isTonicComponent) continue\n\n      assertNodeIsTonic(node)\n\n      const id = node.getAttribute(\"id\")\n      if (!id || !Tonic._refIds.includes(id)) continue\n      Tonic._states[id] = node.state\n    }\n\n    if (render === undefined || render === null) {\n      this._apply(target, content)\n    } else if (render.constructor.name === Tonic.AsyncFunction) {\n      return (render as TRender<P, Promise<TonicTemplate>>)\n        .call(this, this.html, this.props)\n        .then((content: TContent) => this._apply(target, content))\n    } else if (render.constructor.name === Tonic.AsyncFunctionGenerator) {\n      return this._drainIterator(\n        target,\n        (render as TRender<P, AsyncGenerator<TonicTemplate>>).call(this)\n      )\n    } else if (render === null) {\n      this._apply(target, content)\n    } else if (render instanceof Function) {\n      this._apply(\n        target,\n        (render as TRender<P, TonicTemplate>).call(\n          this,\n          this.html,\n          this.props\n        ) || \"\"\n      )\n    }\n\n    return\n  }\n\n  private _apply(target: ShadowRoot | Tonic<P, S>, content: TContent) {\n    if (typeof content === \"string\") {\n      content = Tonic.escape(content)\n    } else if (content instanceof TonicTemplate) {\n      content = content.rawText\n    } else {\n      target.innerHTML = \"\"\n      target.appendChild(content.cloneNode(true))\n      return\n    }\n\n    assertContentIsString(content)\n\n    if (this.stylesheet) {\n      content = `<style nonce=${\n        Tonic.nonce || \"\"\n      }>${this.stylesheet()}</style>${content}`\n    }\n\n    target.innerHTML = content\n\n    if (this.styles) {\n      const styles = this.styles()\n      for (const node of Array.from(target.querySelectorAll(\"[styles]\"))) {\n        const nodeStyles = node.getAttribute(\"styles\")\n        if (!nodeStyles) continue\n        for (const s of nodeStyles.split(/\\s+/)) {\n          Object.assign((node as HTMLElement).style, styles[s.trim()])\n        }\n      }\n    }\n\n    const tChildren = Tonic._children[this._id] || {}\n\n    const walk = (\n      node: Node,\n      fn: (node: Node, children: any, id: string) => void\n    ) => {\n      if (node.nodeType === 3) {\n        const id = node.textContent?.trim() || \"\"\n        if (tChildren[id]) fn(node, tChildren[id], id)\n      }\n\n      const childNodes = node.childNodes\n      if (!childNodes) return\n\n      for (let i = 0; i < childNodes.length; i++) {\n        walk(childNodes[i], fn)\n      }\n    }\n\n    walk(target, (node, children, id) => {\n      for (const child of children) {\n        node.parentNode?.insertBefore(child, node)\n      }\n      delete Tonic._children[this._id][id]\n      node.parentNode?.removeChild(node)\n    })\n  }\n\n  protected dispatch(eventName: string, detail = null) {\n    const opts = { bubbles: true, detail }\n    this.dispatchEvent(new window.CustomEvent(eventName, opts))\n  }\n\n  protected html(strings: TemplateStringsArray, ...values: any[]): TNode {\n    const refs = (o: any | any[]) => {\n      if (o && o.__children__) return this._placehold(o)\n      if (o && o.isTonicTemplate) return o.rawText\n      switch (Object.prototype.toString.call(o)) {\n        case \"[object HTMLCollection]\":\n        case \"[object NodeList]\":\n          return this._placehold([...o])\n        case \"[object Array]\":\n          if ((o as any[]).every((x) => x.isTonicTemplate && !x.unsafe)) {\n            return new TonicTemplate(o.join(\"\\n\"), null, false)\n          }\n          return this._prop(o)\n        case \"[object Object]\":\n        case \"[object Function]\":\n          return this._prop(o)\n        case \"[object NamedNodeMap]\":\n          return this._prop(Tonic._normalizeAttrs(o))\n        case \"[object Number]\":\n          return `${o}__float`\n        case \"[object String]\":\n          return Tonic.escape(o)\n        case \"[object Boolean]\":\n          return `${o}__boolean`\n        case \"[object Null]\":\n          return `${o}__null`\n        case \"[object HTMLElement]\":\n          return this._placehold([o])\n      }\n      if (\n        typeof o === \"object\" &&\n        o &&\n        o.nodeType === 1 &&\n        typeof o.cloneNode === \"function\"\n      ) {\n        return this._placehold([o])\n      }\n      return o\n    }\n\n    const out = []\n    for (let i = 0; i < strings.length - 1; i++) {\n      out.push(strings[i], refs(values[i]))\n    }\n    out.push(strings[strings.length - 1])\n\n    const htmlStr = out.join(\"\").replace(Tonic.SPREAD, (_, p) => {\n      const o = Tonic._data[p.split(\"__\")[1]][p]\n      return Object.entries(o)\n        .map(([key, value]) => {\n          const k = key.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase()\n          if (value === true) return k\n          else if (value) return `${k}=\"${Tonic.escape(String(value))}\"`\n          else return \"\"\n        })\n        .filter(Boolean)\n        .join(\" \")\n    })\n    return new TonicTemplate(htmlStr, strings, false)\n  }\n\n  protected connectedCallback() {\n    this.root = this.shadowRoot || this // here for back compat\n\n    if (super.id && !Tonic._refIds.includes(super.id)) {\n      Tonic._refIds.push(super.id)\n    }\n\n    const cc = (s: string) => s.replace(/-(.)/g, (_, m) => m.toUpperCase())\n\n    for (const { name: _name, value } of Array.from(this.attributes)) {\n      const name = cc(_name) as keyof P\n      const p = value\n\n      this._props[name] = value as P[keyof P]\n\n      if (/__\\w+__\\w+__/.test(p)) {\n        const { 1: root } = p.split(\"__\")\n        this._props[name] = Tonic._data[root][p]\n      } else if (/\\d+__float/.test(p)) {\n        this._props[name] = parseFloat(p) as P[keyof P]\n      } else if (p === \"null__null\") {\n        this._props[name] = null as P[keyof P]\n      } else if (/\\w+__boolean/.test(p)) {\n        this._props[name] = p.includes(\"true\") as P[keyof P]\n      } else if (/placehold:\\w+:\\w+__/.test(p)) {\n        const { 1: root } = p.split(\":\")\n        this._props[name] = Tonic._children[root][p][0]\n      }\n    }\n\n    this._props = Object.assign(\n      this.defaults ? this.defaults() : {},\n      this._props\n    )\n\n    this._id = this._id ?? Tonic._createId()\n\n    this.willConnect?.()\n\n    if (!this.isInDocument(this.root)) return\n\n    if (!this.preventRenderOnReconnect) {\n      if (!this._source) {\n        this._source = this.innerHTML\n      } else {\n        this.innerHTML = this._source\n      }\n\n      const p = this._set(this.root, this.render)\n      if (p && p.then) return p.then(() => this.connected?.())\n    }\n\n    this.connected && this.connected()\n    return\n  }\n\n  protected isInDocument(target: ShadowRoot | Tonic<P, S>) {\n    const root = target.getRootNode()\n    return root === document || root.toString() === \"[object ShadowRoot]\"\n  }\n\n  protected disconnectedCallback() {\n    this.disconnected?.()\n    delete Tonic._data[this._id]\n    delete Tonic._children[this._id]\n  }\n\n  protected scheduleReRender = (oldProps: P) => {\n    if (this.pendingReRender) return this.pendingReRender\n\n    this.pendingReRender = new Promise<void>((resolve) =>\n      setTimeout(() => {\n        if (!this.isInDocument(this.shadowRoot || this)) return\n        const p = this._set(this.shadowRoot || this, this.render)\n        this.pendingReRender = null\n\n        if (p && p.then) {\n          return p.then(() => {\n            this.updated?.(oldProps)\n            resolve()\n          })\n        }\n\n        this.updated && this.updated(oldProps)\n        resolve()\n        return\n      }, 0)\n    )\n\n    return this.pendingReRender\n  }\n\n  protected reRender = (o: P | ((oldProps: P) => P) = this.props) => {\n    const oldProps = { ...this.props }\n    this._props = typeof o === \"function\" ? o(oldProps) : o\n    return this.scheduleReRender(oldProps)\n  }\n\n  // Part of HTMLElement interface\n  handleEvent = (e: Event) => {\n    const handler = (this as any)[e.type] as (e: Event) => void\n    handler?.(e)\n  }\n\n  public defaults?(): Partial<P>\n\n  public styles?(): Record<string, any>\n\n  public connected?(): void\n\n  public disconnected?(): void\n\n  public willConnect?(): void\n\n  public stylesheet?(): string\n\n  public updated?(oldProps: P): void\n\n  public render?<P extends TProps>(\n    html?: (\n      strings: TemplateStringsArray,\n      values: TProps[keyof TProps][]\n    ) => any,\n    props?: P\n  ): TNode\n\n  public get props() {\n    return this._props\n  }\n\n  public get state() {\n    return this._checkId(), this._state\n  }\n\n  public set state(newState: S) {\n    this._state = (this._checkId(), newState)\n  }\n}\n\n// Tonic.prototype.isTonicComponent = true\n\n// Object.assign(Tonic, {\n//   _tags: \"\",\n//   _refIds: [],\n//   _data: {},\n//   _states: {},\n//   _children: {},\n//   _reg: {},\n//   _stylesheetRegistry: [],\n//   _index: 0,\n//   version: typeof require !== \"undefined\" ? require(\"./package\").version : null,\n//   SPREAD: /\\.\\.\\.\\s?(__\\w+__\\w+__)/g,\n//   ESC: /[\"&'<>`/]/g,\n//   AsyncFunctionGenerator: async function* () {}.constructor,\n//   AsyncFunction: async function () {}.constructor,\n//   MAP: {\n//     '\"': \"&quot;\",\n//     \"&\": \"&amp;\",\n//     \"'\": \"&#x27;\",\n//     \"<\": \"&lt;\",\n//     \">\": \"&gt;\",\n//     \"`\": \"&#x60;\",\n//     \"/\": \"&#x2F;\",\n//   },\n// })\n\nfunction assertContentIsString(content: TContent): asserts content is string {\n  if (typeof content !== \"string\") {\n    throw Error(\"content is not a string\")\n  }\n}\n\nfunction assertNodeIsTonic(node: Element | Tonic): asserts node is Tonic {\n  if (!(node as any).isTonicComponent) {\n    throw Error(\"node is not a tonic component\")\n  }\n}\n\nexport default Tonic\n", "import \"./styles.css\"\n\nimport Tonic from \"../../\"\n\nclass ParentComponent extends Tonic {\n  render() {\n    return this.html`\n      <div class=\"parent\">\n        <span>Hey now:</span>\n        ${this.children} \n      </div>\n    `\n  }\n}\n\nTonic.add(ParentComponent)\n\nclass ChildComponent extends Tonic<{ value: string }> {\n  render() {\n    return this.html`\n      <div class=\"child\">\n        ${this.props.value}\n      </div>\n    `\n  }\n}\n\nTonic.add(ChildComponent)\n\nclass TonicDialog extends Tonic<{\n  width: string\n  widthMobile?: string\n  height: string\n  overlay: string\n  backgroundColor: string\n}> {\n  closeIcon: HTMLDivElement\n\n  constructor() {\n    super()\n\n    this.classList.add(\"tonic--dialog\")\n    this.setAttribute(\"hidden\", \"true\")\n\n    if (!document.querySelector(\".tonic--dialog--overlay\")) {\n      const div = document.createElement(\"div\")\n      div.classList.add(\"tonic--dialog--overlay\")\n      div.textContent = \" \"\n      document.body.appendChild(div)\n    }\n\n    this.closeIcon = document.createElement(\"div\")\n    this.closeIcon.className = \"tonic--dialog--close\"\n\n    const svgns = \"http://www.w3.org/2000/svg\"\n    const xlinkns = \"http://www.w3.org/1999/xlink\"\n    const svg = document.createElementNS(svgns, \"svg\")\n    const use = document.createElementNS(svgns, \"use\")\n\n    this.closeIcon.appendChild(svg)\n    svg.appendChild(use)\n\n    use.setAttributeNS(xlinkns, \"href\", \"#close\")\n    use.setAttributeNS(xlinkns, \"xlink:href\", \"#close\")\n\n    const iconColor = \"var(--tonic-primary, #333)\"\n    use.setAttribute(\"color\", iconColor)\n    use.setAttribute(\"fill\", iconColor)\n  }\n\n  defaults() {\n    return {\n      width: \"450px\",\n      height: \"auto\",\n      overlay: \"true\",\n      backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n    }\n  }\n\n  _escapeHandler?: (e: KeyboardEvent) => void\n\n  _getZIndex() {\n    return Array.from(document.querySelectorAll(\"body *\"))\n      .map((elt) => parseFloat(window.getComputedStyle(elt).zIndex))\n      .reduce((z, highest = Number.MIN_SAFE_INTEGER) =>\n        isNaN(z) || z < highest ? highest : z\n      )\n  }\n\n  static stylesheet() {\n    return `\n      .tonic--dialog {\n        box-shadow: 0px 6px 35px 3px rgba(0, 0, 0, 0.2);\n        background: var(--tonic-window);\n        border: 1px solid var(--tonic-border);\n        border-radius: 6px;\n        position: fixed;\n        overflow: hidden;\n        top: 50%;\n        left: 50%;\n        z-index: -1;\n        opacity: 0;\n        transition: z-index .25s;\n        transform: translate(-50%, -50%) scale(0.88);\n        will-change: transform;\n      }\n      .tonic--dialog.tonic--show {\n        transform: translate(-50%, -50%) scale(1);\n        opacity: 1;\n        animation-duration: .25s;\n        animation-name: tonic--dialog--show;\n        transition-timing-function: ease;\n      }\n      .tonic--dialog.tonic--hide {\n        transform: translate(-50%, -50%) scale(0.88);\n        opacity: 0;\n        animation-duration: .2s;\n        animation-name: tonic--dialog--hide;\n        transition-timing-function: ease;\n      }\n      .tonic--dialog > .tonic--dialog--close {\n        width: 25px;\n        height: 25px;\n        position: absolute;\n        top: 10px;\n        right: 10px;\n        cursor: pointer;\n      }\n      .tonic--dialog > .tonic--dialog--close svg {\n        width: inherit;\n        height: inherit;\n      }\n      @keyframes tonic--dialog--show {\n        from {\n          transform: translate(-50%, -50%) scale(0.88);\n          opacity: 0;\n        }\n        to {\n          opacity: 1;\n          transform: translate(-50%, -50%) scale(1);\n        }\n      }\n      @keyframes tonic--dialog--hide {\n        from {\n          transform: translate(-50%, -50%) scale(1);\n          opacity: 1;\n        }\n        to {\n          opacity: 0;\n          transform: translate(-50%, -50%) scale(0.88);\n        }\n      }\n      .tonic--dialog--overlay {\n        position: fixed;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        opacity: 0;\n        z-index: -1;\n        transition: all 0.2s;\n        background: var(--tonic-overlay);\n      }\n      .tonic--dialog--overlay.tonic--show {\n        opacity: 1;\n      }\n    `\n  }\n\n  show = () => {\n    console.log(\"showing\")\n    const z = this._getZIndex()\n    this.appendChild(this.closeIcon)\n    this.removeAttribute(\"hidden\")\n\n    if (this.props.overlay !== \"false\") {\n      const overlay = document.querySelector<HTMLDivElement>(\n        \".tonic--dialog--overlay\"\n      )!\n      overlay.classList.add(\"tonic--show\")\n      overlay.style.setProperty(\"zIndex\", z.toString())\n    }\n\n    this.style.setProperty(\"zIndex\", (z + 100).toString())\n\n    return new Promise<void>((resolve) => {\n      if (this.props.widthMobile && document.body.clientWidth < 500) {\n        this.props.width = this.props.widthMobile\n      }\n\n      this.style.width = this.props.width\n      this.style.height = this.props.height\n\n      const done = () => {\n        clearTimeout(timer)\n        resolve()\n      }\n\n      const timer = setTimeout(done, 512)\n      this.addEventListener(\"animationend\", done, { once: true })\n\n      this.classList.remove(\"tonic--hide\")\n      this.classList.add(\"tonic--show\")\n\n      this._escapeHandler = (e) => {\n        if (e.key === \"Escape\") this.hide()\n      }\n\n      document.addEventListener(\"keyup\", this._escapeHandler)\n    })\n  }\n\n  hide = () => {\n    const overlay = document.querySelector<HTMLDivElement>(\n      \".tonic--dialog--overlay\"\n    )!\n    overlay.classList.remove(\"tonic--show\")\n    overlay.style.setProperty(\"zIndex\", \"-1\")\n\n    return new Promise<void>((resolve) => {\n      this.style.setProperty(\"zIndex\", \"-1\")\n      document.removeEventListener(\"keyup\", this._escapeHandler!)\n\n      const done = () => {\n        clearTimeout(timer)\n        this.setAttribute(\"hidden\", \"true\")\n        resolve()\n      }\n\n      const timer = setTimeout(done, 512)\n      this.addEventListener(\"animationend\", done, { once: true })\n\n      this.classList.remove(\"tonic--show\")\n      this.classList.add(\"tonic--hide\")\n    })\n  }\n\n  event<K extends keyof HTMLElementEventMap>(eventName: K) {\n    const that = this\n\n    return {\n      then(resolve: ({}: any) => void) {\n        const resolver = (e: KeyboardEvent) => {\n          if (e.key === \"Escape\") resolve({})\n        }\n\n        const listener = (event: HTMLElementEventMap[K]) => {\n          const close = Tonic.match(event.target, \".tonic--dialog--close\")\n          const value = Tonic.match(event.target, \"[value]\")\n\n          if (close || value) {\n            that.removeEventListener(eventName, listener)\n            document.removeEventListener(\"keyup\", resolver)\n          }\n\n          if (close) return resolve({})\n          if (value)\n            resolve({\n              [(event.currentTarget as HTMLInputElement).value!]: true,\n            })\n        }\n\n        document.addEventListener(\"keyup\", resolver)\n\n        that.addEventListener(eventName, listener)\n      },\n    }\n  }\n\n  // @ts-ignore\n  click(e: MouseEvent) {\n    if (Tonic.match(e.target, \".tonic--dialog--close\")) {\n      this.hide()\n    }\n  }\n\n  updated() {\n    this.appendChild(this.closeIcon)\n  }\n\n  render() {\n    return this.html`\n      ${this.children}\n    `\n  }\n}\n\nTonic.add(TonicDialog)\n\nclass DialogInner extends Tonic<{ message: string }> {\n  // @ts-ignore\n  async click(e: MouseEvent) {\n    return Tonic.match(e.target, \"tonic-button\")\n  }\n\n  render() {\n    return this.html`\n      <header>Dialog</header>\n      <main>\n        ${this.props.message || \"Ready\"}\n      </main>\n      <footer>\n        <tonic-button class=\"tonic--close\" id=\"close\">Close</tonic-button>\n      </footer>\n    `\n  }\n}\n\nTonic.add(DialogInner)\n\ndocument.getElementById(\"root\")!.innerHTML = `\n<div>\n  <tonic-dialog id=\"dialog-default\">\n    <dialog-inner message=\"Hello!\"></dialog-inner>\n  </tonic-dialog>\n  <button id=\"show-button\">Show</button>\n  <button id=\"hide-button\">Hide</button>\n</div>\n`\n\nconst dialog = document.querySelector<TonicDialog>(\"#dialog-default\")!\n\nconst showButton = document.querySelector<HTMLButtonElement>(\"#show-button\")!\nshowButton.addEventListener(\"click\", dialog.show)\n\nconst hideButton = document.querySelector<HTMLButtonElement>(\"hide-button\")!\nhideButton.addEventListener(\"click\", dialog.hide)\n"],
  "mappings": "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",
  "names": []
}
