{
  "version": 3,
  "sources": ["../../src/index.ts"],
  "sourcesContent": ["// @ts-check\n\"use strict\"\n\ntype TLike = new (...args: any[]) => void\n\ntype TContent = string | Node | TonicTemplate\n\ninterface TAttr<K extends string = any, V = any> {\n  name: K\n  value: V\n}\n\ninterface TState {}\n\ntype TProps = Record<string, any>\n\ntype TRender<P extends TProps, K extends TNode> = (\n  html?: (strings: TemplateStringsArray, values: any[]) => TNode,\n  props?: P\n) => K\n\ntype TNode =\n  | string\n  | TonicTemplate\n  | Promise<TonicTemplate>\n  | AsyncGenerator<TonicTemplate>\n\nclass TonicTemplate {\n  isTonicTemplate = true\n  __children__?: any[]\n\n  constructor(\n    public rawText: string,\n    public templateStrings: TemplateStringsArray | null,\n    public unsafe: boolean\n  ) {}\n\n  public valueOf() {\n    return this.rawText\n  }\n  public toString() {\n    return this.rawText\n  }\n}\n\nabstract class Tonic<\n  P extends TProps = {},\n  S extends TState = {}\n> extends window.HTMLElement {\n  static isTonicTemplate = true\n  static _tags = \"\"\n  static _refIds: string[] = []\n  static _data: Record<string, any> = {}\n  static _states: Record<string, any> = {}\n  static _children: Record<string, any> = {}\n  static _reg: Record<string, CustomElementConstructor> = {}\n  static _stylesheetRegistry: (() => string)[] = []\n  static _index = 0\n  static SPREAD = /\\.\\.\\.\\s?(__\\w+__\\w+__)/g\n  static ESC = /[\"&'<>`/]/g\n  static AsyncFunctionGenerator = async function* () {}.constructor.name\n  static AsyncFunction = async function () {}.constructor.name\n  static MAP = {\n    '\"': \"&quot;\",\n    \"&\": \"&amp;\",\n    \"'\": \"&#x27;\",\n    \"<\": \"&lt;\",\n    \">\": \"&gt;\",\n    \"`\": \"&#x60;\",\n    \"/\": \"&#x2F;\",\n  }\n  static ssr = false\n  static nonce = Math.random().toString()\n\n  _id = \"\"\n  _source?: string\n  _state: S = {} as S\n  _props: P = {} as P\n  __props: TAttr[] = []\n  preventRenderOnReconnect = false\n  elements: Element[] = []\n  nodes: ChildNode[] = []\n  pendingReRender?: Promise<void> | null = null\n  root?: ShadowRoot | any\n\n  constructor() {\n    super()\n    const state = Tonic._states[super.id]\n    delete Tonic._states[super.id]\n    this._state = state || {}\n    this.preventRenderOnReconnect = false\n    this.elements = [...Array.from(this.children)]\n    ;(this.elements as any).__children__ = true\n    this.nodes = [...Array.from(this.childNodes)]\n    ;(this.nodes as any).__children__ = true\n    this._events()\n  }\n\n  static _createId() {\n    return `tonic${Tonic._index++}`\n  }\n\n  static _splitName(s: string) {\n    return s.match(/[A-Z][a-z0-9]*/g)!.join(\"-\")\n  }\n\n  static _normalizeAttrs<T extends { name: string; value: unknown }>(\n    o: T[],\n    x: Record<string, unknown> = {}\n  ) {\n    ;[...o].forEach((o) => (x[o.name] = o.value))\n    return x\n  }\n\n  private _checkId() {\n    const _id = super.id\n    if (!_id) {\n      const html = this.outerHTML.replace(this.innerHTML, \"...\")\n      throw new Error(`Component: ${html} has no id`)\n    }\n    return _id\n  }\n\n  private _events() {\n    const hp = Object.getOwnPropertyNames(window.HTMLElement.prototype)\n    for (const p of this.__props) {\n      if (hp.indexOf(\"on\" + p) === -1) continue\n      this.addEventListener(p as any, this)\n    }\n  }\n\n  private _prop(o: any) {\n    const id = this._id\n    const p = `__${id}__${Tonic._createId()}__`\n    Tonic._data[id] = Tonic._data[id] || {}\n    Tonic._data[id][p] = o\n    return p\n  }\n\n  private _placehold(r: any) {\n    const id = this._id\n    const ref = `placehold:${id}:${Tonic._createId()}__`\n    Tonic._children[id] = Tonic._children[id] || {}\n    Tonic._children[id][ref] = r\n    return ref\n  }\n\n  static match(el: Element | any, s: string) {\n    if (!el.matches) el = el.parentElement\n    return el.matches(s) ? el : el.closest(s)\n  }\n\n  static getPropertyNames(proto: any) {\n    const props = []\n    while (proto && proto !== Tonic.prototype) {\n      props.push(...Object.getOwnPropertyNames(proto))\n      proto = Object.getPrototypeOf(proto)\n    }\n    return props\n  }\n\n  static add(c: TLike): TLike\n  static add(c: Function, htmlName: string): Function\n  static add(c: TLike | Function, htmlName?: string) {\n    const name = c instanceof Tonic ? c.constructor.name : c.name\n\n    if (!htmlName) {\n      htmlName = Tonic._splitName(name).toLowerCase()\n    }\n\n    const hasValidName = htmlName && htmlName.length > 1\n\n    if (!hasValidName) {\n      throw Error(\"Mangling. https://bit.ly/2TkJ6zP\")\n    }\n\n    if (!Tonic.ssr && window.customElements.get(htmlName)) {\n      console.warn(`Replacing Tonic.add(${name}, '${htmlName}')`)\n    }\n\n    if (!(\"isTonicTemplate\" in c)) {\n      const tmp = {\n        [c.name]: class extends Tonic {},\n      }[c.name]\n      ;(tmp as any).prototype.render = c\n      c = tmp\n    }\n\n    ;(c as any).prototype.__props = Tonic.getPropertyNames((c as any).prototype)\n\n    Tonic._reg[htmlName] = c as CustomElementConstructor\n    Tonic._tags = Object.keys(Tonic._reg).join()\n    window.customElements.define(htmlName, c as CustomElementConstructor)\n\n    if (c instanceof Tonic && typeof c.stylesheet === \"function\") {\n      Tonic.registerStyles(c.stylesheet)\n    }\n\n    return c\n  }\n\n  static registerStyles(stylesheetFn: () => string) {\n    if (Tonic._stylesheetRegistry.includes(stylesheetFn)) return\n    Tonic._stylesheetRegistry.push(stylesheetFn)\n\n    const styleNode = document.createElement(\"style\")\n    if (Tonic.nonce) styleNode.setAttribute(\"nonce\", Tonic.nonce)\n    styleNode.appendChild(document.createTextNode(stylesheetFn()))\n    if (document.head) document.head.appendChild(styleNode)\n  }\n\n  static escape(s: string) {\n    return s.replace(Tonic.ESC, (c) => Tonic.MAP[c as keyof typeof Tonic.MAP])\n  }\n\n  static unsafeRawString(s: string, templateStrings: TemplateStringsArray) {\n    return new TonicTemplate(s, templateStrings, true)\n  }\n\n  private async _drainIterator(\n    target: Tonic<P, S> | ShadowRoot,\n    iterator: AsyncGenerator\n  ): Promise<void> {\n    const result = await iterator.next()\n    this._set(target, undefined, result.value)\n    if (result.done) return\n    return this._drainIterator(target, iterator)\n  }\n\n  private _set = (\n    target: Tonic<P, S> | ShadowRoot,\n    render: undefined | typeof this[\"render\"],\n    content: string = \"\"\n  ) => {\n    for (const node of Array.from(target.querySelectorAll(Tonic._tags))) {\n      if (!(node as any).isTonicComponent) continue\n\n      assertNodeIsTonic(node)\n\n      const id = node.getAttribute(\"id\")\n      if (!id || !Tonic._refIds.includes(id)) continue\n      Tonic._states[id] = node.state\n    }\n\n    if (render === undefined || render === null) {\n      this._apply(target, content)\n    } else if (render.constructor.name === Tonic.AsyncFunction) {\n      return (render as TRender<P, Promise<TonicTemplate>>)\n        .call(this, this.html, this.props)\n        .then((content: TContent) => this._apply(target, content))\n    } else if (render.constructor.name === Tonic.AsyncFunctionGenerator) {\n      return this._drainIterator(\n        target,\n        (render as TRender<P, AsyncGenerator<TonicTemplate>>).call(this)\n      )\n    } else if (render === null) {\n      this._apply(target, content)\n    } else if (render instanceof Function) {\n      this._apply(\n        target,\n        (render as TRender<P, TonicTemplate>).call(\n          this,\n          this.html,\n          this.props\n        ) || \"\"\n      )\n    }\n\n    return\n  }\n\n  private _apply(target: ShadowRoot | Tonic<P, S>, content: TContent) {\n    if (typeof content === \"string\") {\n      content = Tonic.escape(content)\n    } else if (content instanceof TonicTemplate) {\n      content = content.rawText\n    } else {\n      target.innerHTML = \"\"\n      target.appendChild(content.cloneNode(true))\n      return\n    }\n\n    assertContentIsString(content)\n\n    if (this.stylesheet) {\n      content = `<style nonce=${\n        Tonic.nonce || \"\"\n      }>${this.stylesheet()}</style>${content}`\n    }\n\n    target.innerHTML = content\n\n    if (this.styles) {\n      const styles = this.styles()\n      for (const node of Array.from(target.querySelectorAll(\"[styles]\"))) {\n        const nodeStyles = node.getAttribute(\"styles\")\n        if (!nodeStyles) continue\n        for (const s of nodeStyles.split(/\\s+/)) {\n          Object.assign((node as HTMLElement).style, styles[s.trim()])\n        }\n      }\n    }\n\n    const tChildren = Tonic._children[this._id] || {}\n\n    const walk = (\n      node: Node,\n      fn: (node: Node, children: any, id: string) => void\n    ) => {\n      if (node.nodeType === 3) {\n        const id = node.textContent?.trim() || \"\"\n        if (tChildren[id]) fn(node, tChildren[id], id)\n      }\n\n      const childNodes = node.childNodes\n      if (!childNodes) return\n\n      for (let i = 0; i < childNodes.length; i++) {\n        walk(childNodes[i], fn)\n      }\n    }\n\n    walk(target, (node, children, id) => {\n      for (const child of children) {\n        node.parentNode?.insertBefore(child, node)\n      }\n      delete Tonic._children[this._id][id]\n      node.parentNode?.removeChild(node)\n    })\n  }\n\n  protected dispatch(eventName: string, detail = null) {\n    const opts = { bubbles: true, detail }\n    this.dispatchEvent(new window.CustomEvent(eventName, opts))\n  }\n\n  protected html(strings: TemplateStringsArray, ...values: any[]): TNode {\n    const refs = (o: any | any[]) => {\n      if (o && o.__children__) return this._placehold(o)\n      if (o && o.isTonicTemplate) return o.rawText\n      switch (Object.prototype.toString.call(o)) {\n        case \"[object HTMLCollection]\":\n        case \"[object NodeList]\":\n          return this._placehold([...o])\n        case \"[object Array]\":\n          if ((o as any[]).every((x) => x.isTonicTemplate && !x.unsafe)) {\n            return new TonicTemplate(o.join(\"\\n\"), null, false)\n          }\n          return this._prop(o)\n        case \"[object Object]\":\n        case \"[object Function]\":\n          return this._prop(o)\n        case \"[object NamedNodeMap]\":\n          return this._prop(Tonic._normalizeAttrs(o))\n        case \"[object Number]\":\n          return `${o}__float`\n        case \"[object String]\":\n          return Tonic.escape(o)\n        case \"[object Boolean]\":\n          return `${o}__boolean`\n        case \"[object Null]\":\n          return `${o}__null`\n        case \"[object HTMLElement]\":\n          return this._placehold([o])\n      }\n      if (\n        typeof o === \"object\" &&\n        o &&\n        o.nodeType === 1 &&\n        typeof o.cloneNode === \"function\"\n      ) {\n        return this._placehold([o])\n      }\n      return o\n    }\n\n    const out = []\n    for (let i = 0; i < strings.length - 1; i++) {\n      out.push(strings[i], refs(values[i]))\n    }\n    out.push(strings[strings.length - 1])\n\n    const htmlStr = out.join(\"\").replace(Tonic.SPREAD, (_, p) => {\n      const o = Tonic._data[p.split(\"__\")[1]][p]\n      return Object.entries(o)\n        .map(([key, value]) => {\n          const k = key.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase()\n          if (value === true) return k\n          else if (value) return `${k}=\"${Tonic.escape(String(value))}\"`\n          else return \"\"\n        })\n        .filter(Boolean)\n        .join(\" \")\n    })\n    return new TonicTemplate(htmlStr, strings, false)\n  }\n\n  protected connectedCallback() {\n    this.root = this.shadowRoot || this // here for back compat\n\n    if (super.id && !Tonic._refIds.includes(super.id)) {\n      Tonic._refIds.push(super.id)\n    }\n\n    const cc = (s: string) => s.replace(/-(.)/g, (_, m) => m.toUpperCase())\n\n    for (const { name: _name, value } of Array.from(this.attributes)) {\n      const name = cc(_name) as keyof P\n      const p = value\n\n      this._props[name] = value as P[keyof P]\n\n      if (/__\\w+__\\w+__/.test(p)) {\n        const { 1: root } = p.split(\"__\")\n        this._props[name] = Tonic._data[root][p]\n      } else if (/\\d+__float/.test(p)) {\n        this._props[name] = parseFloat(p) as P[keyof P]\n      } else if (p === \"null__null\") {\n        this._props[name] = null as P[keyof P]\n      } else if (/\\w+__boolean/.test(p)) {\n        this._props[name] = p.includes(\"true\") as P[keyof P]\n      } else if (/placehold:\\w+:\\w+__/.test(p)) {\n        const { 1: root } = p.split(\":\")\n        this._props[name] = Tonic._children[root][p][0]\n      }\n    }\n\n    this._props = Object.assign(\n      this.defaults ? this.defaults() : {},\n      this._props\n    )\n\n    this._id = this._id ?? Tonic._createId()\n\n    this.willConnect?.()\n\n    if (!this.isInDocument(this.root)) return\n\n    if (!this.preventRenderOnReconnect) {\n      if (!this._source) {\n        this._source = this.innerHTML\n      } else {\n        this.innerHTML = this._source\n      }\n\n      const p = this._set(this.root, this.render)\n      if (p && p.then) return p.then(() => this.connected?.())\n    }\n\n    this.connected && this.connected()\n    return\n  }\n\n  protected isInDocument(target: ShadowRoot | Tonic<P, S>) {\n    const root = target.getRootNode()\n    return root === document || root.toString() === \"[object ShadowRoot]\"\n  }\n\n  protected disconnectedCallback() {\n    this.disconnected?.()\n    delete Tonic._data[this._id]\n    delete Tonic._children[this._id]\n  }\n\n  protected scheduleReRender = (oldProps: P) => {\n    if (this.pendingReRender) return this.pendingReRender\n\n    this.pendingReRender = new Promise<void>((resolve) =>\n      setTimeout(() => {\n        if (!this.isInDocument(this.shadowRoot || this)) return\n        const p = this._set(this.shadowRoot || this, this.render)\n        this.pendingReRender = null\n\n        if (p && p.then) {\n          return p.then(() => {\n            this.updated?.(oldProps)\n            resolve()\n          })\n        }\n\n        this.updated && this.updated(oldProps)\n        resolve()\n        return\n      }, 0)\n    )\n\n    return this.pendingReRender\n  }\n\n  protected reRender = (o: P | ((oldProps: P) => P) = this.props) => {\n    const oldProps = { ...this.props }\n    this._props = typeof o === \"function\" ? o(oldProps) : o\n    return this.scheduleReRender(oldProps)\n  }\n\n  // Part of HTMLElement interface\n  handleEvent = (e: Event) => {\n    const handler = (this as any)[e.type] as (e: Event) => void\n    handler?.(e)\n  }\n\n  public defaults?(): Partial<P>\n\n  public styles?(): Record<string, any>\n\n  public connected?(): void\n\n  public disconnected?(): void\n\n  public willConnect?(): void\n\n  public stylesheet?(): string\n\n  public updated?(oldProps: P): void\n\n  public render?<P extends TProps>(\n    html?: (\n      strings: TemplateStringsArray,\n      values: TProps[keyof TProps][]\n    ) => any,\n    props?: P\n  ): TNode\n\n  public get props() {\n    return this._props\n  }\n\n  public get state() {\n    return this._checkId(), this._state\n  }\n\n  public set state(newState: S) {\n    this._state = (this._checkId(), newState)\n  }\n}\n\n// Tonic.prototype.isTonicComponent = true\n\n// Object.assign(Tonic, {\n//   _tags: \"\",\n//   _refIds: [],\n//   _data: {},\n//   _states: {},\n//   _children: {},\n//   _reg: {},\n//   _stylesheetRegistry: [],\n//   _index: 0,\n//   version: typeof require !== \"undefined\" ? require(\"./package\").version : null,\n//   SPREAD: /\\.\\.\\.\\s?(__\\w+__\\w+__)/g,\n//   ESC: /[\"&'<>`/]/g,\n//   AsyncFunctionGenerator: async function* () {}.constructor,\n//   AsyncFunction: async function () {}.constructor,\n//   MAP: {\n//     '\"': \"&quot;\",\n//     \"&\": \"&amp;\",\n//     \"'\": \"&#x27;\",\n//     \"<\": \"&lt;\",\n//     \">\": \"&gt;\",\n//     \"`\": \"&#x60;\",\n//     \"/\": \"&#x2F;\",\n//   },\n// })\n\nfunction assertContentIsString(content: TContent): asserts content is string {\n  if (typeof content !== \"string\") {\n    throw Error(\"content is not a string\")\n  }\n}\n\nfunction assertNodeIsTonic(node: Element | Tonic): asserts node is Tonic {\n  if (!(node as any).isTonicComponent) {\n    throw Error(\"node is not a tonic component\")\n  }\n}\n\nexport default Tonic\n"],
  "mappings": "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",
  "names": []
}
